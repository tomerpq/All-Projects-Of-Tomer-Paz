#BlueJ class context
comment0.params=x\ y
comment0.target=Point2(int,\ int)
comment0.text=\r\n\ Construct\ a\ point.\ If\ one\ of\ the\ parameters\ is\ negative\ then\ it\ should\ be\ initialized\ to\ zero.\r\n\ @param\ x\ The\ x\ coordinate\r\n\ @param\ y\ The\ y\ coordinate\r\n
comment1.params=other
comment1.target=Point2(Point2)
comment1.text=\r\n\ Copy\ constructor\ for\ Points.\ Construct\ a\ point\ with\ the\ same\ coordinates\ as\ other\ point.\r\n\ @param\ other\ The\ point\ object\ from\ which\ to\ construct\ the\ new\ point\r\n
comment10.params=other
comment10.target=boolean\ isRight(Point2)
comment10.text=\r\n\ Check\ if\ this\ point\ is\ to\ the\ right\ of\ other\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ right\ of\r\n\ @return\ True\ if\ this\ point\ is\ to\ the\ right\ of\ other\ point\r\n
comment11.params=other
comment11.target=double\ distance(Point2)
comment11.text=\r\n\ Calculate\ the\ distance\ between\ this\ point\ and\ other\ point.\r\n\ @param\ other\ The\ point\ to\ calculate\ distance\ from\r\n\ @return\ The\ distance\ between\ this\ and\ other\ points\r\n
comment12.params=dX\ dY
comment12.target=void\ move(int,\ int)
comment12.text=\r\n\ Move\ the\ x\ coordinate\ by\ dX\ and\ the\ y\ coordinate\ by\ dY.\ If\ movement\ moves\ the\ point\ outside\ first\ quadrant\ then\ the\ point\ will\ remain\ at\ the\ same\ place\ and\ not\ move.\r\n\ @param\ dX\ The\ amount\ to\ move\ in\ the\ x\ direction\r\n\ @param\ dY\ The\ amount\ to\ move\ in\ the\ y\ direction\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Return\ a\ string\ representation\ of\ this\ point.\r\n\ @return\ String\ representation\ of\ this\ point\r\n
comment2.params=
comment2.target=int\ getX()
comment2.text=\r\n\ Return\ the\ x\ coordinate\ of\ the\ point.\r\n\ @return\ The\ x\ coordinate\ of\ the\ point.\r\n
comment3.params=
comment3.target=int\ getY()
comment3.text=\r\n\ Return\ the\ y\ coordinate\ of\ the\ point.\r\n\ @return\ The\ y\ coordinate\ of\ the\ point.\r\n
comment4.params=x
comment4.target=void\ setX(int)
comment4.text=\r\n\ Set\ the\ x\ coordinate\ of\ the\ point.\ If\ a\ negative\ number\ is\ received\ then\ x\ coordinate\ does\ not\ change.\r\n\ @param\ x\ The\ new\ x\ coordinate.\r\n
comment5.params=y
comment5.target=void\ setY(int)
comment5.text=\r\n\ Set\ the\ y\ coordinate\ of\ the\ point.\ If\ a\ negative\ number\ is\ received\ then\ y\ coordinate\ does\ not\ change.\r\n\ @param\ y\ The\ new\ y\ coordinate\r\n
comment6.params=other
comment6.target=boolean\ equals(Point2)
comment6.text=\r\n\ Check\ if\ this\ point\ equals\ other\ point.\r\n\ @param\ other\ The\ point\ to\ be\ compared\ with\ this\ point\r\n\ @return\ True\ if\ this\ point\ equals\ other\ point\r\n
comment7.params=other
comment7.target=boolean\ isAbove(Point2)
comment7.text=\r\n\ Check\ if\ this\ point\ is\ above\ other\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ above\r\n\ @return\ True\ if\ this\ point\ is\ above\ other\ point\r\n
comment8.params=other
comment8.target=boolean\ isUnder(Point2)
comment8.text=\r\n\ Check\ if\ this\ point\ is\ under\ other\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ under\r\n\ @return\ True\ if\ this\ point\ is\ under\ other\ point\r\n
comment9.params=other
comment9.target=boolean\ isLeft(Point2)
comment9.text=\r\n\ Check\ if\ this\ point\ is\ to\ the\ left\ of\ other\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ left\ of\r\n\ @return\ True\ if\ this\ point\ is\ to\ the\ left\ of\ other\ point\r\n
numComments=14
