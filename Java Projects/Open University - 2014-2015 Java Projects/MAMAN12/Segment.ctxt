#BlueJ class context
comment0.params=left\ right
comment0.target=Segment(Point1,\ Point1)
comment0.text=\r\n\ Construct\ a\ segment.\ If\ the\ segment\ is\ not\ parallel\ to\ the\ x\ axis\ then\ change\ the\ y\ coordinate\ of\ the\ right\ point\ according\ to\ the\ y\ coordinate\ of\ the\ left\ point\r\n\ @param\ left\ The\ left\ point\ of\ the\ segment\r\n\ @param\ right\ The\ right\ point\ of\ the\ segment\r\n
comment1.params=leftX\ leftY\ rightX\ rightY
comment1.target=Segment(int,\ int,\ int,\ int)
comment1.text=\r\n\ Construct\ a\ segment.\ If\ the\ segment\ is\ not\ parallel\ to\ the\ x\ axis\ then\ change\ the\ y\ coordinate\ of\ the\ right\ point\ according\ to\ the\ y\ coordinate\ of\ the\ left\ point\r\n\ @param\ leftX\ The\ x\ coordinate\ of\ the\ left\ point\r\n\ @param\ leftY\ The\ y\ coordinate\ of\ the\ left\ point\r\n\ @param\ rightX\ The\ x\ coordinate\ of\ the\ right\ point\r\n\ @param\ rightY\ The\ y\ coordinate\ of\ the\ right\ point\r\n
comment10.params=other
comment10.target=boolean\ isLeft(Segment)
comment10.text=\r\n\ Check\ if\ this\ segment\ is\ to\ the\ left\ of\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ check\ if\ this\ segment\ is\ left\ of\r\n\ @return\ True\ if\ this\ segment\ is\ to\ the\ left\ of\ other\ segment\r\n
comment11.params=other
comment11.target=boolean\ isRight(Segment)
comment11.text=\r\n\ Check\ if\ this\ segment\ is\ to\ the\ right\ of\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ check\ if\ this\ segment\ is\ right\ of\r\n\ @return\ True\ if\ this\ segment\ is\ to\ the\ right\ of\ other\ segment\r\n
comment12.params=delta
comment12.target=void\ moveHorizontal(int)
comment12.text=\r\n\ Move\ segment\ by\ delta\ in\ the\ x\ direction.\r\n\ @param\ delta\ The\ amount\ to\ move\ in\ the\ x\ direction\r\n
comment13.params=delta
comment13.target=void\ moveVertical(int)
comment13.text=\r\n\ Move\ segment\ by\ delta\ in\ the\ y\ direction.\r\n\ @param\ delta\ The\ amount\ to\ move\ in\ the\ y\ direction\r\n
comment14.params=delta
comment14.target=void\ changeSize(int)
comment14.text=\r\n\ Change\ (increase\ or\ decrease)\ the\ segment\ length\ by\ delta.\r\n\ @param\ delta\ The\ amount\ by\ which\ to\ increase\ or\ decrease\ the\ segment\ length\r\n
comment15.params=p
comment15.target=boolean\ pointOnSegment(Point1)
comment15.text=\r\n\ Check\ if\ point\ lies\ on\ this\ segment.\r\n\ @param\ p\ The\ point\ to\ check\ if\ it\ lies\ on\ the\ segment\r\n\ @return\ True\ if\ the\ point\ lies\ on\ this\ segment\r\n
comment16.params=other
comment16.target=boolean\ isBigger(Segment)
comment16.text=\r\n\ Check\ if\ this\ segment\ is\ bigger\ than\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ check\ if\ this\ segment\ is\ bigger\ than\r\n\ @return\ True\ this\ segment\ is\ bigger\ than\ other\ segment\r\n
comment17.params=other
comment17.target=int\ overlap(Segment)
comment17.text=\r\n\ Calculate\ the\ length\ of\ the\ overlap\ between\ this\ and\ other\ segments.\r\n\ @param\ other\ The\ other\ segment\ to\ calculate\ the\ overlap\ with\r\n\ @return\ The\ length\ of\ the\ overlap\ between\ this\ and\ other\ segments\r\n
comment18.params=other
comment18.target=double\ trapezePerimeter(Segment)
comment18.text=\r\n\ Calculate\ the\ perimeter\ of\ the\ trapeze\ formed\ by\ this\ and\ other\ segments.\r\n\ @param\ other\ The\ other\ segment\r\n\ @return\ The\ perimeter\ of\ the\ trapeze\ formed\ by\ this\ and\ other\ segments\r\n
comment2.params=other
comment2.target=Segment(Segment)
comment2.text=\r\n\ Copy\ constructor\ for\ Segments.\ Construct\ a\ segment\ with\ the\ same\ left\ and\ right\ points\ of\ other\ segment.\r\n\ @param\ other\ The\ segment\ object\ from\ which\ to\ construct\ the\ new\ segment\r\n
comment3.params=
comment3.target=Point1\ getPoLeft()
comment3.text=\r\n\ Return\ the\ left\ point\ of\ the\ segment.\r\n\ @return\ The\ left\ point\ of\ the\ segment.\r\n
comment4.params=
comment4.target=Point1\ getPoRight()
comment4.text=\r\n\ Return\ the\ right\ point\ of\ the\ segment.\r\n\ @return\ The\ right\ point\ of\ the\ segment.\r\n
comment5.params=
comment5.target=int\ getLength()
comment5.text=\r\n\ Return\ the\ segment\ length.\r\n\ @return\ The\ segment\ length.\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Return\ a\ string\ representation\ of\ this\ segment.\r\n\ @return\ String\ representation\ of\ this\ segment\r\n
comment7.params=other
comment7.target=boolean\ equals(Segment)
comment7.text=\r\n\ Check\ if\ this\ segment\ equals\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ be\ compared\ with\ this\ segment\r\n\ @return\ True\ if\ this\ segment\ equals\ other\ segment\r\n
comment8.params=other
comment8.target=boolean\ isAbove(Segment)
comment8.text=\r\n\ Check\ if\ this\ segment\ is\ above\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ check\ if\ this\ segment\ is\ above\r\n\ @return\ True\ if\ this\ segment\ is\ above\ other\ segment\r\n
comment9.params=other
comment9.target=boolean\ isUnder(Segment)
comment9.text=\r\n\ Check\ if\ this\ segment\ is\ under\ other\ segment.\r\n\ @param\ other\ The\ segment\ to\ check\ if\ this\ segment\ is\ under\r\n\ @return\ True\ if\ this\ segment\ is\ under\ other\ segment\r\n
numComments=19
